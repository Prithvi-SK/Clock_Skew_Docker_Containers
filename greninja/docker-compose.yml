# version: '3.8'
# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.4.1
#     container_name: zookeeper
#     networks:
#       - kafka-bridge
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000

#   kafka:
#     image: confluentinc/cp-kafka:7.4.1
#     container_name: kafka
#     networks:
#       - kafka-bridge
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#   redis:
#     image: redis:latest
#     container_name: redis
#     networks:
#       - kafka-bridge
#     ports:
#       - "6379:6379"

# networks:
#   kafka-bridge:
#     driver: bridge


version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-bridge

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-bridge

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - kafka-bridge

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile-producer
    container_name: producer
    depends_on:
      - kafka
      - redis
    networks:
      - kafka-bridge
    restart: on-failure

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile-consumer
    container_name: consumer
    depends_on:
      - kafka
      - redis
    networks:
      - kafka-bridge
    restart: on-failure

networks:
  kafka-bridge:
    driver: bridge
